{"ast":null,"code":"var _jsxFileName = \"W:\\\\react\\\\projects\\\\streams\\\\client\\\\src\\\\components\\\\GoogleAuth.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GoogleAuth extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isSignedIn: null\n    };\n\n    this.onAuthChange = () => {\n      this.setState({\n        isSignedIn: this.auth.isSignedIn.get()\n      });\n    };\n  }\n\n  // we wired gspi library to project, we loaded some additional code to library,\n  // then we initialized some authencation with our client Id and ask for a scope o email\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: '113713252572-di6n1i8g3stgpl145tq1ujluka5j4fin.apps.googleusercontent.com',\n        scope: 'email'\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.setState({\n          isSignedIn: this.auth.isSignedIn.get()\n        });\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  renderAuthButton() {\n    if (this.state.isSignedIn === null) {\n      return null;\n    } else if (this.state.isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui red google button\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"google icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 62\n        }, this), \"signOut\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui green google button\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"google icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 64\n        }, this), \"sign in with google\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.renderAuthButton()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default GoogleAuth;","map":{"version":3,"sources":["W:/react/projects/streams/client/src/components/GoogleAuth.js"],"names":["React","GoogleAuth","Component","state","isSignedIn","onAuthChange","setState","auth","get","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,UAAN,SAAyBD,KAAK,CAACE,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAD6B;;AAAA,SAgBrCC,YAhBqC,GAgBtB,MAAM;AACjB,WAAKC,QAAL,CAAc;AAAEF,QAAAA,UAAU,EAAE,KAAKG,IAAL,CAAUH,UAAV,CAAqBI,GAArB;AAAd,OAAd;AACH,KAlBoC;AAAA;;AAErC;AACA;AACAC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACnCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CACC;AAACC,QAAAA,QAAQ,EAAC,0EAAV;AAAsFC,QAAAA,KAAK,EAAE;AAA7F,OADD,EAECC,IAFD,CAEM,MAAM;AACR,aAAKV,IAAL,GAAYG,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ;AACA,aAAKb,QAAL,CAAc;AAAEF,UAAAA,UAAU,EAAE,KAAKG,IAAL,CAAUH,UAAV,CAAqBI,GAArB;AAAd,SAAd;AACA,aAAKD,IAAL,CAAUH,UAAV,CAAqBgB,MAArB,CAA4B,KAAKf,YAAjC;AACH,OAND;AAOH,KARD;AASH;;AAODgB,EAAAA,gBAAgB,GAAE;AACd,QAAG,KAAKlB,KAAL,CAAWC,UAAX,KAA0B,IAA7B,EAAkC;AAC9B,aAAO,IAAP;AACH,KAFD,MAGK,IAAG,KAAKD,KAAL,CAAWC,UAAd,EAAyB;AAC1B,0BAAQ;AAAQ,QAAA,SAAS,EAAC,sBAAlB;AAAA,gCAAyC;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AACH,KAFI,MAGD;AACA,0BAAQ;AAAQ,QAAA,SAAS,EAAC,wBAAlB;AAAA,gCAA2C;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AACH;AACJ;;AAEDkB,EAAAA,MAAM,GAAG;AACL,wBACA;AAAA,gBAAM,KAAKD,gBAAL;AAAN;AAAA;AAAA;AAAA;AAAA,YADA;AAGH;;AArCoC;;AAwCzC,eAAepB,UAAf","sourcesContent":["import React from 'react';\r\n\r\nclass GoogleAuth extends React.Component {\r\n    state = { isSignedIn: null}\r\n    // we wired gspi library to project, we loaded some additional code to library,\r\n    // then we initialized some authencation with our client Id and ask for a scope o email\r\n    componentDidMount(){\r\n        window.gapi.load('client:auth2', () => {\r\n            window.gapi.client.init\r\n            ({clientId:'113713252572-di6n1i8g3stgpl145tq1ujluka5j4fin.apps.googleusercontent.com', scope: 'email'})\r\n            .then(() => {\r\n                this.auth = window.gapi.auth2.getAuthInstance();\r\n                this.setState({ isSignedIn: this.auth.isSignedIn.get()});\r\n                this.auth.isSignedIn.listen(this.onAuthChange);\r\n            });\r\n        });\r\n    };\r\n\r\n    onAuthChange = () => {\r\n        this.setState({ isSignedIn: this.auth.isSignedIn.get()});\r\n    };\r\n\r\n\r\n    renderAuthButton(){\r\n        if(this.state.isSignedIn === null){\r\n            return null;\r\n        }\r\n        else if(this.state.isSignedIn){\r\n            return (<button className=\"ui red google button\"><i className=\"google icon\" />signOut</button>)\r\n        }\r\n        else{\r\n            return (<button className=\"ui green google button\"><i className=\"google icon\" />sign in with google</button>)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>{this.renderAuthButton()}</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GoogleAuth;\r\n"]},"metadata":{},"sourceType":"module"}